import { promises as fsp } from 'fs';
import fetch from 'node-fetch';
import { dirname, join } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const __root = dirname(__dirname);

const version = 'latest';
const source = `https://www.unicode.org/Public/security/${version}/confusables.txt`;

const blocked = await fsp.readFile(join(__dirname, 'blocked'), {
	encoding: 'utf-8'
});

function parseHexString(hex) {
	const code = parseInt(hex, 16);

	// Get the string from the UTF-8 code point:
	return String.fromCodePoint(code);
}

const result = await fetch(source);
const text = await result.text();
if (!result.ok) throw new Error(text);

const map = new Map();

let skipped = 0;
let processed = 0;
const lines = text.split('\n');

// Show log
console.log(`Processing ${lines.length} lines...`);

for (const line of lines) {
	if (line.startsWith('#')) continue;

	// HEX_IN ;\tHEX_OUT_0[ HEX_OUT_1[ HEX_OUT_2[ HEX_OUT_3]]] ;\tMA\t# ( IN → OUT ) IN_NAME → OUT_NAME\t#
	const first = line.indexOf(';');
	if (first === -1) continue;

	const second = line.indexOf(';', first + 1);
	if (second === -1) continue;

	const hexIn = line.slice(0, first).trim();
	const hexOut = line
		.slice(first + 1, second)
		.trim()
		.split(' ');

	const characterIn = parseHexString(hexIn);
	const characterOut = hexOut.map(parseHexString).join('');

	if (blocked.includes(characterIn)) {
		++skipped;
		continue;
	}

	const existing = map.get(characterOut);
	map.set(characterOut, existing ? existing + characterIn : characterIn);
	++processed;
}

console.log(
	`Done; received ${processed} variations (skipped ${skipped}) for ${map.size} characters.`
);

const path = join(__root, 'src', 'characters.ts');
console.log(`Updating characters at '${path}'...`);

const header = `// Autogenerated file from Unicode, source:\n// ${source}\n\nexport const characters = new Map<string, string>([\n\t`;
const footer = '\n]);\n';
const content = [];
for (const [key, value] of map.entries()) {
	content.push(JSON.stringify([key, value]));
}

const output = header + content.join(',\n\t') + footer;
await fsp.writeFile(path, output, { encoding: 'utf8' });

console.log('Done.');
